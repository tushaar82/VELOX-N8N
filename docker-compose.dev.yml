version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: velo_nginx_dev
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.dev.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - fastapi
      - frontend
    networks:
      - velo_network

  # FastAPI Backend
  fastapi:
    build:
      context: ./backend/fastapi
      dockerfile: Dockerfile.dev
    container_name: velo_fastapi_dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/velo_trading_dev
      - REDIS_URL=redis://redis:6379
      - OPENALGO_URL=http://openalgo:3000
      - JWT_SECRET_KEY=dev-secret-key-change-in-production
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - LOG_LEVEL=DEBUG
      - ENVIRONMENT=development
    depends_on:
      - postgres
      - redis
      - openalgo
    volumes:
      - ./backend/fastapi:/app
      - ./backend/fastapi/app/logs:/app/logs
    networks:
      - velo_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # N8N Workflow Engine
  n8n:
    image: n8nio/n8n:latest
    container_name: velo_n8n_dev
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_dev
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=password
      - N8N_LOG_LEVEL=debug
    depends_on:
      - postgres
    volumes:
      - ./backend/n8n/custom-nodes:/home/node/.n8n/custom
      - ./backend/n8n/workflows:/home/node/.n8n/workflows
      - n8n_data:/home/node/.n8n
    networks:
      - velo_network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: velo_frontend_dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
      - REACT_APP_N8N_URL=http://localhost:5678
      - REACT_APP_ENVIRONMENT=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - velo_network
    command: npm start

  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: velo_postgres_dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=velo_trading_dev
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./infrastructure/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - velo_network
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  # Redis Cache
  redis:
    image: redis:6-alpine
    container_name: velo_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
      - ./infrastructure/redis/redis.conf:/etc/redis/redis.conf
    networks:
      - velo_network
    command: redis-server /etc/redis/redis.conf

  # Grafana Monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: velo_grafana_dev
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_LOG_LEVEL=debug
    volumes:
      - grafana_dev_data:/var/lib/grafana
      - ./infrastructure/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./infrastructure/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - postgres
    networks:
      - velo_network

  # OpenAlgo Gateway
  openalgo:
    image: openalgo/openalgo:latest
    container_name: velo_openalgo_dev
    ports:
      - "3000:3000"
    environment:
      - OPENALGO_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/openalgo_dev
      - LOG_LEVEL=debug
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - openalgo_dev_data:/app/data
      - ./infrastructure/openalgo/config.json:/app/config/config.json
    networks:
      - velo_network

  # PostgreSQL for OpenAlgo (separate database)
  openalgo_db:
    image: postgres:14
    container_name: velo_openalgo_db_dev
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=openalgo_dev
    volumes:
      - openalgo_db_dev_data:/var/lib/postgresql/data
    networks:
      - velo_network

volumes:
  postgres_dev_data:
  redis_dev_data:
  grafana_dev_data:
  openalgo_dev_data:
  openalgo_db_dev_data:

networks:
  velo_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16